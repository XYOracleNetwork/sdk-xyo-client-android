apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'maven-publish'
apply plugin: "de.mannodermaus.android-junit5"

group = 'network.xyo'

def majorVersion = 2
def minorVersion = 1
def patchVersion = 5

def verCode = majorVersion  * 10000000 + minorVersion * 10000 + patchVersion
def verString = "" + majorVersion + "." + minorVersion + "(Build-" + patchVersion + ")"

android {
    compileSdk 33
    buildToolsVersion '30.0.3'

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 33
        versionCode verCode
        versionName verString

        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
        testHandleProfiling = true
        testFunctionalTest = true

        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            shrinkResources false
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    namespace 'sdk.xyo.client.android'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.8.20"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4'
    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'com.squareup.okhttp3:okhttp:4.9.2'
    implementation 'com.madgag.spongycastle:prov:1.58.0.0'
    implementation 'com.madgag.spongycastle:pkix:1.54.0.0'
    implementation 'com.ionspin.kotlin:bignum:0.3.8'
    implementation 'com.google.code.gson:gson:2.8.9'

    // (Required) Writing and executing Unit Tests on the JUnit Platform
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.9.3")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.9.3")

    // (Optional) If you need "Parameterized Tests"
    testImplementation("org.junit.jupiter:junit-jupiter-params:5.9.3")

    // (Optional) If you also have JUnit 4-based tests
    // testImplementation("junit:junit:4.13.2")
    // testRuntimeOnly("org.junit.vintage:junit-vintage-engine:5.9.3")
}

publishing {
    publications {
        Production(MavenPublication) {
            artifact("$buildDir/outputs/aar/sdk-release.aar") {
                builtBy assemble
            }
            groupId 'network.xyo'
            artifactId 'sdk-xyo-client-android'
            version verString

            //The publication doesn't know about our dependencies, so we have to manually add them to the pom
            pom.withXml {
                def dependenciesNode = asNode()['dependencies'][0] ?: asNode().appendNode('dependencies')
                //Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.implementation.allDependencies.each {
                    if (it.name != 'unspecified') {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
}